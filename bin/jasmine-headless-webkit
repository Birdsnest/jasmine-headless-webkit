#!/usr/bin/env ruby

gem_dir = File.expand_path('../..', __FILE__)
$:.unshift(File.join(gem_dir, 'lib'))

require 'yaml'
require 'fileutils'
require 'getoptlong'

require 'rubygems'

gem 'rainbow'
gem 'jasmine'
gem 'coffee-script'

require 'jasmine'
require 'coffee-script'
require 'rainbow'

require 'jasmine/cli'
include Jasmine::CLI

opts = GetoptLong.new(
  [ '--colors', '-c', GetoptLong::NO_ARGUMENT ],
  [ '--no-colors', GetoptLong::NO_ARGUMENT ],
  [ '--keep', GetoptLong::NO_ARGUMENT ]
)

options = { :colors => false, :remove_html_file => true }

@process_options = lambda { |*args|
  opt = args.flatten.shift
  case opt
  when '--colors', '-c'
    options[:colors] = true
  when '--no-colors', '-nc'
    options[:colors] = false
  when '--keep', '-k'
    options[:remove_html_file] = false
  end
}

read_defaults_file if defaults_file?

opts.each(&@process_options)

data = YAML.load_file(ARGV.shift || 'spec/javascripts/support/jasmine.yml')

if !File.file?(File.join(gem_dir, 'ext/jasmine-webkit-specrunner/jasmine-webkit-specrunner'))
  puts "The Qt WebKit widget is not compiled! Try re-installing this gem."
  exit 1
end

puts "Running Jasmine specs..."

files = [
  'file://' + File.join(Jasmine.root, 'lib/jasmine.js'),
  'file://' + File.join(Jasmine.root, 'lib/jasmine-html.js')
]

files += [ [ 'src_files', 'src_dir' ], [ 'stylesheets', 'src_dir' ], [ 'helpers', 'spec_dir' ], [ 'spec_files', 'spec_dir' ] ].collect do |searches, root|
  data[searches] ||= DEFAULTS[searches]
  data[root] ||= DEFAULTS[root]

  if data[searches]
    data[searches].collect do |search|
      path = search
      path = File.join(data[root], path) if data[root]
      Dir[path]
    end
  end
end

files = files.flatten.compact.collect { |file|
  case File.extname(file)
  when '.js'
    %{<script type="text/javascript" src="#{file}"></script>}
  when '.coffee'
    begin
      %{<script type="text/javascript">#{CoffeeScript.compile(fh = File.open(file))}</script>}
    rescue CoffeeScript::CompilationError => e
      puts "[%s] %s: %s" % [ 'coffeescript'.color(:red), file.color(:yellow), e.message.color(:white) ]
      exit 1
    ensure
      fh.close
    end
  when '.css'
    %{<link rel="stylesheet" href="#{file}" type="text/css" />}
  end
}

output = <<-HTML
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <title>Jasmine Test Runner</title>
  <script type="text/javascript">
window.console = { log: function(data) { debug.log(JSON.stringify(data)); } };
  </script>
  #{files.join("\n")}
</head>
<body>

<script type="text/javascript">
  jasmine.getEnv().addReporter(new jasmine.TrivialReporter());
  jasmine.getEnv().execute();
</script>

</body>
</html>
HTML

File.open(target = "specrunner.#{$$}.html", 'w') { |fh| fh.print output }
system %{#{File.join(gem_dir, 'ext/jasmine-webkit-specrunner/jasmine-webkit-specrunner')} #{options[:colors] ? '-c' : ''} #{target}}
status = $?.exitstatus
FileUtils.rm_f target if options[:remove_html_file] || (status == 0)

exit status

